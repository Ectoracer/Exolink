<!doctype html>
<html>
    <head>
        <meta charset="utf-8">
        <noscript><meta http-equiv = "refresh" content = "0; url = /nojs" /></noscript>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Exolink</title>
        <meta property="og:title" content="Exolink">
        <meta property="og:description" content="Exolink lets you make Exoracer share links with custom titles, descriptions, and images.">
        <link rel="icon" href="/favicon.ico">
        <style>
            @import url("https://fonts.googleapis.com/css2?family=Monoton&family=Oxanium:wght@700&display=swap");
            :root { color-scheme: light dark; }
            a {
                color: rgb(0, 64, 255);
                text-decoration: none;
                position: relative;
                transition: color 0.25s;
            }
            a:after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 0%;
                border-bottom: 2px solid rgb(0, 128, 255);
                transition: 0.4s;
            }
            a:hover:after {
                width: 100%;
                color: rgb(0, 128, 255);
            }
            a:hover { color: rgb(0, 128, 255); }
            @media (prefers-color-scheme: dark) {
                a {
                    color: rgb(0, 128, 255);
                    text-decoration: none;
                    position: relative;
                    transition: color 0.25s;
                }
                a:after {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 0;
                    width: 0%;
                    border-bottom: 2px solid rgb(78, 166, 255);
                    transition: 0.4s;
                }
                a:hover:after {
                    width: 100%;
                    color: rgb(78, 166, 255);
                }
                a:hover { color: rgb(78, 166, 255); }
            }
                * {
                  font-family: "Oxanium", cursive;
                  color: #d9d9d9;
                  text-align: center;
                  outline: none;
                  margin: 0;
                  padding: 0;
                }

                body {
                  margin: 0 auto;
                  background-image: url(exo_bg.png);
                  position: absolute;
                  top: 50%;
                  left: 50%;
                  transform: translate(-50%, -50%);
                  text-align: center;
                }
                h1 {
                  font-family: "Monoton", cursive;
                  font-size: 50px;
                }
                h3 {
                  font-size: 20px;
                }

                input[type="text"], input[type="number"] {
                  font-size: 20px;
                  text-align: left;
                  border-color: #5a3ab3;
                  background-color: #3a2574;
                  border-style: solid;
                  border-width: 3px;
                  border-radius: 2.5px;
                  margin: 2px;
                  width: 300px;
                }
                label {
                  font-size: 20px;
                }

                input[type="text"]::placeholder,input[type="number"]::placeholder  {
                  font-style: italic;
                }

                select {
                  cursor: pointer;
                  text-align: left;
                  border-radius: 3px;
                  background-color: #7b4afa;
                  border-style: none;
                  padding: 3px;
                  font-size: 20px;
                }

                input[type="submit"] {
                  cursor: pointer;
                  margin: 10px;
                  border-radius: 3px;
                  background-color: #7b4afa;
                  border-style: none;
                  padding: 4px;
                  font-size: 20px;
                }

                button {
                  cursor: pointer;
                  margin: 10px;
                  border-radius: 3px;
                  background-color: #7b4afa;
                  border-style: none;
                  padding: 4px;
                  font-size: 20px;
                }
        </style>
    </head>
    <body>
        <% 
            let modifiedLink = sourceCode;
            if (sourceCode == "https://github.com/jbmagination/exolink") sourceCode = `<a href="https://github.com/jbmagination/exolink">source code</a>`
            else sourceCode = `source code: <a href="${modifiedLink}">modified</a> (<a href="/changes.txt">changes</a>), <a href="https://github.com/jbmagination/exolink">original</a>`
        %> 
        <h1>Exolink <span style="font-size:45%"><%= version %> | <%- sourceCode %></span></h1>
        <div>
            <select id="domainPrefix">
                <option value="exoracer">exoracer</option>
                <option value="exo">exo</option>
            </select>
            <label for="shareLink">.page.link/</label>
            <input type="text" id="shareLink" title="Share link" placeholder="Share link">
            <button onclick="javascript:getData()">Get data</button>
        </div>
        <br>
        <div>
            <div>
                <label for="levelID">Level ID:</label>
                <input type="text" id="levelID" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx">
            </div>
            <div>
                <label for="title">Title:</label>
                <input type="text" id="title" placeholder="Title">
            </div>
            <div>
                <label for="description">Description:</label>
                <input type="text" id="description" placeholder="Description">
            </div>
            <div>
                <label for="imageURL">Image URL:</label>
                <input type="text" id="imageURL" placeholder="Image URL">
                <button onclick="javascript:makeImageURL()">Adjust image URL</button>
            </div>
            <div>
                <label for="levelVersion">Level version:</label>
                <input type="number" id="levelVersion" placeholder="Level version">
            </div>
            <div>
                <label for="suffixOption">Suffix type:</label>
                <select id="suffixOption" onchange="showSuffixOption()">
                    <option value="UNGUESSABLE">Unguessable</option>
                    <option value="SHORT">Short</option>
                    <% if (process.env.CUSTOM_LINK == "true") { %> <option value="CUSTOM">Custom</option> <% } %>
                </select>
            </div>
            <% if (process.env.CUSTOM_LINK == "true") { %>
            <div>
                <label id="customSuffixLabel" for="customSuffix" hidden="true">Suffix:</label>
                <input type="text" id="customSuffix" placeholder="Suffix" hidden="true">
            </div>
            <% } %>
            <br>
            <button onclick="javascript:makeLink()">Make link</button>
        </div>
        <br>
        <div id="link"></div>
        <script>
            function makeImageURL() {
                var confirmed = confirm("This will replace the existing image URL to make it match with the current level ID and level version. You do not need to use this button to use a custom image URL.")
                if (confirmed) {
                    document.getElementById('levelID').setAttribute("readonly", "readonly")
                    document.getElementById('levelVersion').setAttribute("readonly", "readonly")
                    document.getElementById('imageURL').setAttribute("readonly", "readonly")
                    
                    var levelID = document.getElementById('levelID').value;
                    var levelVersion = document.getElementById('levelVersion').value;
                    document.getElementById('imageURL').value = `https://storage.googleapis.com/exoracer-bd008.appspot.com/levels/${levelID}-${levelVersion}.png`
                    
                    document.getElementById('levelID').removeAttribute("readonly")
                    document.getElementById('levelVersion').removeAttribute("readonly")
                    document.getElementById('imageURL').removeAttribute("readonly")
                            
                }
            }

            function getData() {
                document.getElementById('shareLink').setAttribute("readonly", "readonly")
                document.getElementById('levelID').setAttribute("readonly", "readonly")
                document.getElementById('title').setAttribute("readonly", "readonly")
                document.getElementById('description').setAttribute("readonly", "readonly")
                document.getElementById('imageURL').setAttribute("readonly", "readonly")
                document.getElementById('levelVersion').setAttribute("readonly", "readonly")
                document.getElementById('suffixOption').setAttribute("readonly", "readonly")
                if (document.getElementById('customSuffix')) document.getElementById('customSuffix').setAttribute("readonly", "readonly")

                // client-side validation and correction
                var domainPrefix = document.getElementById('domainPrefix').value
                domainPrefix = domainPrefix.trim()
                if(domainPrefix !== "exo") domainPrefix = "exoracer"

                var link = document.getElementById('shareLink').value
                link = link.trim()
                if(link.startsWith('http://')) { link = link.substring(7) }
                else if (link.startsWith('https://')) { link = link.substring(8) }
                if (link.startsWith('preview.page.link/')) link = link.substring(18)
                if (link.startsWith('exo.page.link/')) link = link.substring(14)
                if (link.startsWith('exoracer.page.link/')) link = link.substring(19)

                document.getElementById('shareLink').value = link
                let suffixOption = "Unguessable";

                switch (link.length) {
                    case 4:
                        suffixOption = "Short";
                        break;
                    case 17:
                        break;
                    default:
                        if (domainPrefix == "exoracer") {
                            if (!(link[0] == '?')) {
                                alert('Something went wrong: Validation error: Short links must be either 4 or 17 characters')
                                document.getElementById('shareLink').removeAttribute("readonly")
                                document.getElementById('levelID').removeAttribute("readonly")
                                document.getElementById('title').removeAttribute("readonly")
                                document.getElementById('description').removeAttribute("readonly")
                                document.getElementById('imageURL').removeAttribute("readonly")
                                document.getElementById('levelVersion').removeAttribute("readonly")
                                document.getElementById('suffixOption').removeAttribute("readonly")
                                document.getElementById('customSuffix').removeAttribute("readonly")
                                return
                            }
                        } else suffixOption = "Custom";
                        break;
                }

                // actually make requests
                fetch('/getData', {
                    method: 'POST', 
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ 
                        "link": link,
                        "domainPrefix": domainPrefix 
                    })
                })
                .then((response) => response.json())
                .then((data) => {
                    switch (data.status) {
                        case "SUCCESS":
                            document.getElementById('levelID').value = data.levelID
                            document.getElementById('title').value = data.title
                            document.getElementById('description').value = data.description
                            document.getElementById('imageURL').value = data.imageURL
                            document.getElementById('levelVersion').value = data.levelVersion
                            document.getElementById('suffixOption').value = suffixOption
                            document.getElementById('shareLink').removeAttribute("readonly")
                            document.getElementById('levelID').removeAttribute("readonly")
                            document.getElementById('title').removeAttribute("readonly")
                            document.getElementById('description').removeAttribute("readonly")
                            document.getElementById('imageURL').removeAttribute("readonly")
                            document.getElementById('levelVersion').removeAttribute("readonly")
                            document.getElementById('suffixOption').removeAttribute("readonly")
                            if (document.getElementById('customSuffix')) document.getElementById('customSuffix').removeAttribute("readonly")
                            break;
                        case "ERROR":
                            alert("Something went wrong: " + data.error)
                            console.error("Something went wrong: " + data.error)
                            document.getElementById('shareLink').removeAttribute("readonly")
                            document.getElementById('levelID').removeAttribute("readonly")
                            document.getElementById('title').removeAttribute("readonly")
                            document.getElementById('description').removeAttribute("readonly")
                            document.getElementById('imageURL').removeAttribute("readonly")
                            document.getElementById('levelVersion').removeAttribute("readonly")
                            document.getElementById('suffixOption').removeAttribute("readonly")
                            if (document.getElementById('customSuffix')) document.getElementById('customSuffix').removeAttribute("readonly")
                            break;
                        default:
                            alert('Something went horribly wrong')
                            console.error('Something went horribly wrong')
                            document.getElementById('shareLink').removeAttribute("readonly")
                            document.getElementById('levelID').removeAttribute("readonly")
                            document.getElementById('title').removeAttribute("readonly")
                            document.getElementById('description').removeAttribute("readonly")
                            document.getElementById('imageURL').removeAttribute("readonly")
                            document.getElementById('levelVersion').removeAttribute("readonly")
                            document.getElementById('suffixOption').removeAttribute("readonly")
                            if (document.getElementById('customSuffix')) document.getElementById('customSuffix').removeAttribute("readonly")
                            break;
                    }
                })
                .catch((error) => {
                    alert("Something went wrong: " + error)
                    console.error("Something went wrong: " + error)
                    document.getElementById('shareLink').removeAttribute("readonly")
                    document.getElementById('levelID').removeAttribute("readonly")
                    document.getElementById('title').removeAttribute("readonly")
                    document.getElementById('description').removeAttribute("readonly")
                    document.getElementById('imageURL').removeAttribute("readonly")
                    document.getElementById('levelVersion').removeAttribute("readonly")
                    document.getElementById('suffixOption').removeAttribute("readonly")
                    if (document.getElementById('customSuffix')) document.getElementById('customSuffix').removeAttribute("readonly")
                })
            }

            function makeLink() {
                document.getElementById('shareLink').setAttribute("readonly", "readonly")
                document.getElementById('levelID').setAttribute("readonly", "readonly")
                document.getElementById('title').setAttribute("readonly", "readonly")
                document.getElementById('description').setAttribute("readonly", "readonly")
                document.getElementById('imageURL').setAttribute("readonly", "readonly")
                document.getElementById('levelVersion').setAttribute("readonly", "readonly")
                document.getElementById('suffixOption').setAttribute("readonly", "readonly")
                if (document.getElementById('customSuffix')) document.getElementById('customSuffix').setAttribute("readonly", "readonly")
                
                // client-side validation
                let levelIDregex = /^[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]-[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]-[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]-[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]-[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]$/
                if (!(levelIDregex.test(document.getElementById('levelID').value))) {
                    alert('Something went wrong: Validation error: Invalid level ID')
                    document.getElementById('shareLink').removeAttribute("readonly")
                    document.getElementById('levelID').removeAttribute("readonly")
                    document.getElementById('title').removeAttribute("readonly")
                    document.getElementById('description').removeAttribute("readonly")
                    document.getElementById('imageURL').removeAttribute("readonly")
                    document.getElementById('levelVersion').removeAttribute("readonly")
                    document.getElementById('suffixOption').removeAttribute("readonly")
                    if (document.getElementById('customSuffix')) document.getElementById('customSuffix').removeAttribute("readonly")
                    return
                }

                if (document.getElementById('suffixOption').value == "") document.getElementById('suffixOption').value = "Unguessable"

                // actually make requests
                fetch('/makeLink', { 
                    method: 'POST', 
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                        "levelID": document.getElementById('levelID').value,
                        "title": document.getElementById('title').value,
                        "description": document.getElementById('description').value,
                        "imageURL": document.getElementById('imageURL').value,
                        "levelVersion": document.getElementById('levelVersion').value,
                        "suffixOption": document.getElementById('suffixOption').value,
                        "customSuffix": document.getElementById('customSuffix').value
                    })
                })
                .then((response) => response.json())
                .then((data) => {
                    switch (data.status) {
                        case "SUCCESS":
                            document.getElementById('link').innerHTML = `<p><a href="${data.link}">${data.link}</a></p>`
                            document.getElementById('shareLink').removeAttribute("readonly")
                            document.getElementById('levelID').removeAttribute("readonly")
                            document.getElementById('title').removeAttribute("readonly")
                            document.getElementById('description').removeAttribute("readonly")
                            document.getElementById('imageURL').removeAttribute("readonly")
                            document.getElementById('levelVersion').removeAttribute("readonly")
                            document.getElementById('suffixOption').removeAttribute("readonly")
                            if (document.getElementById('customSuffix')) document.getElementById('customSuffix').removeAttribute("readonly")
                            break;
                        case "ERROR":
                            alert("Something went wrong: " + data.error)
                            console.error("Something went wrong: " + data.error)
                            document.getElementById('shareLink').removeAttribute("readonly")
                            document.getElementById('levelID').removeAttribute("readonly")
                            document.getElementById('title').removeAttribute("readonly")
                            document.getElementById('description').removeAttribute("readonly")
                            document.getElementById('imageURL').removeAttribute("readonly")
                            document.getElementById('levelVersion').removeAttribute("readonly")
                            document.getElementById('suffixOption').removeAttribute("readonly")
                            if (document.getElementById('customSuffix')) document.getElementById('customSuffix').removeAttribute("readonly")
                            break;
                        default:
                            alert('Something went horribly wrong')
                            console.error('Something went horribly wrong')
                            document.getElementById('shareLink').removeAttribute("readonly")
                            document.getElementById('levelID').removeAttribute("readonly")
                            document.getElementById('title').removeAttribute("readonly")
                            document.getElementById('description').removeAttribute("readonly")
                            document.getElementById('imageURL').removeAttribute("readonly")
                            document.getElementById('levelVersion').removeAttribute("readonly")
                            document.getElementById('suffixOption').removeAttribute("readonly")
                            if (document.getElementById('customSuffix')) document.getElementById('customSuffix').removeAttribute("readonly")
                            break;
                    }
                })
                .catch((error) => {
                    alert("Something went wrong: " + error)
                    console.error("Something went wrong: " + error)
                    document.getElementById('shareLink').removeAttribute("readonly")
                    document.getElementById('levelID').removeAttribute("readonly")
                    document.getElementById('title').removeAttribute("readonly")
                    document.getElementById('description').removeAttribute("readonly")
                    document.getElementById('imageURL').removeAttribute("readonly")
                    document.getElementById('levelVersion').removeAttribute("readonly")
                    document.getElementById('suffixOption').removeAttribute("readonly")
                    if (document.getElementById('customSuffix')) document.getElementById('customSuffix').removeAttribute("readonly")
                })
            }

            function showSuffixOption() {
                if (document.getElementById('suffixOption').value == "CUSTOM") {
                    document.getElementById('customSuffix').hidden = false
                    document.getElementById('customSuffixLabel').hidden = false
                } else {
                    document.getElementById('customSuffix').hidden = true
                    document.getElementById('customSuffixLabel').hidden = true
                }
            }
        </script>
    </body>
</html>